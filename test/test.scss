/**
 * Generally, any serious issues will prevent Synergy from 
 * compiling whatsoever, so whilst the below tests have very
 * little coverage, it is enough to know that the core Synergy
 * functions are working
 */
 
// Enable JSON output?
$to-JSON : true;

// Output config for each module by default?
$output-JSON : true;

// Set the default selector type (flex | chain | static)
$selector-type : 'flex';

// Extend each option as a modifier by default?
$extend-options : true;

// Import SassyJSON
@import "../vendor/SassyJSON/src/SassyJSON";

// Import Synergy
@import "../src/scss/synergy";

/**/

@include module('foo') {
    
    content: '#{&}';
    /* What we expect */
    content: '.foo, [class*="foo-"]';
    
    @include modifier('modifier') {
        content: '#{&}';
        /* What we expect */
        content: '[class*="foo-"][class*="-modifier"]';
    }
    
}

/**/

@mixin foo($custom: ()) {
    
    $foo: config((
        'name' : 'foo',
        'foo'  : false
    ), $custom);
    
    @include module;
    
}

@include foo;

/**/

@mixin bar($custom: ()) {
    
    $bar: config((
        'name' : 'bar',
        'foo'  : false
    ), $custom);
    
    @include module {
        
        content: '#{&}';
        /* What we expect */
        content: '.bar, [class*="bar-"]';
        
        @include modifier('modifier') {
            content: '#{&}';
            /* What we expect */
            content: '[class*="bar-"][class*="-modifier"]';
        }
        
    }

}

@include bar((
    'foo' : true
));

// Output all configuration data to JSON only if setting exists and 
// setting is "true"
@if variable-exists('to-JSON') and $to-JSON {
    @include json-encode($_modules);
}