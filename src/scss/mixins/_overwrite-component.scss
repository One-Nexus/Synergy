// 4. Overwrite-Component
// Overwrite a module component in alternate context
//-----------------------------------------------------------------

//  Usage
// 
//  @include module(form) {
//
//      @include component(input) {
//          ...
//      }
//
//      @include modifier(html5) {
//          @include overwrite-component(input) {
//              ...
//          }
//      }
//
//  }
//
//  <div class="form-html5">
//      <input class="form_input" type="text" />
//  </div>

@mixin overwrite-component($components, $parent: null, $is: null, $not: null, $special: null) {
    $module: if($parent != null, $parent, $module);
    $selectors: ();
    @each $component in $components {
        $selector: #{$module}_#{$component};
        @if $special == adjacent-sibling {
            $selectors: join($selectors, '+ [class*="#{$selector}"]', comma);
        } @else {
            $selectors: join($selectors, '[class*="#{$selector}"]', comma);
        }
        @if $is {
            $modifiers-list: ();
            @each $modifier in $is {
                $selectors: join(
                    $modifiers-list, 
                    selector-append($selectors,'[class*="-#{$modifier}"]'), 
                comma);
            }
        }
        @if $not {
            $modifiers-list: ();
            @each $modifier in $not {
                $selectors: join(
                    $modifiers-list, 
                    selector-append($selectors,':not([class*="-#{$modifier}"])'), 
                comma);
            }
        }
    }
    #{$selectors} {
        @content;
    }
}

// Alias for multiple components
@mixin overwrite-components($components, $type: $type) {
    @include overwrite-component($components, $type) {
        @content;
    }
}