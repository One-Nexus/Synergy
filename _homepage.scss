//=================================================================
// Typography
//=================================================================

@mixin typography($config: ()) {

    $typography: config((
        colors: (
            primary   : blue,
            secondary : green
        ),
        sizes: (
            small     : 0.8em,
            regular   : 1em,
            large     : 1.4em           
        )
    ), $config) !global;
	
	$config: $typography !global;

} // @mixin typography

@function color($color) {
    @return map-get(map-get($typography, colors), $color);
}

@function size($size) {
    @return map-get(map-get($typography, sizes), $size);
}

//=================================================================
// Buttons
//=================================================================

@mixin buttons($config: ()) {

    //-------------------------------------------------------------
    // Config
    //-------------------------------------------------------------

    $buttons: config((

        // Core Styles
        line-height  : 1.4,
        side-spacing : 0.5em,
        background   : grey,
        color        : white,
        // Modifiers
        radius       : 0.4em

    ), $config);
	
	$config: $buttons !global;

    //-------------------------------------------------------------
    // Component
    //-------------------------------------------------------------

    @include component(button) {

    // Core Styles
    //-------------------------------------------------------------

        display: inline-block;
		text-decoration: none;
		transition: 0.4s;
		border: 1px solid transparent;
        line-height: map-get($buttons, line-height);
        padding: 0 map-get($buttons, side-spacing);
        background: map-get($buttons, background);
        color: map-get($buttons, color);

    // Modifiers
    //-------------------------------------------------------------

        // Patterns
		
        @include modifier(round) {
            border-radius: map-get($buttons, radius);
        }

        @include modifier(block) {
            display: block;
        }

		@include modifier(border) {
			background: transparent;
			color: white;
			border-color: white;
			&:hover {
				background: white;
				color: #183C4C;
			}
		}
		
        // Colors

        @include modifier(primary) {
            background: color(primary);
			&:hover {
				background: darken(color(primary), 10%);
			}
        }

        @include modifier(secondary) {
            background: color(secondary);
        }

        // Sizes

        @include modifier(small) {
            font-size: size(small); 
        }

        @include modifier(large) {
            font-size: size(large); 
        }

        // Semantic Styles

        @include modifier(purchase) {
            @include extend(round, primary, large);
        }

    } // component(button)

} // @mixin buttons

//=================================================================
// Header
//=================================================================

@mixin header($config: ()) {

    //-------------------------------------------------------------
    // Config
    //-------------------------------------------------------------

    $header: config((

        background : color(primary),
        top        : 50px,
        dark       : false,
        dark-color : rgba(black, 0.8),
        side       : false,
        side-width : 100%

    ), $config);
	
	$config: $header !global;

    //-------------------------------------------------------------
    // Component
    //-------------------------------------------------------------

    @include component(header) {

    // Core Styles
    //-------------------------------------------------------------

        background: map-get($header, background);   
        margin-top: map-get($header, top);

    // Settings
    //-------------------------------------------------------------

        @include setting(dark) {
            background: map-get($header, dark-color);   
        }

        @include setting(side) {
            // Core Side-Header Styles
            position: fixed;
            top: 0;
            width: map-get($header, side-width);
            z-index: 99;
            @include option(left) {
                left: 0;
            }
            @include option(right) {
                right: 0;
            }
        }

    } // component(header)

} // @mixin header

//=================================================================
// Test Component
//=================================================================

@mixin test($config: ()) {

    //-------------------------------------------------------------
    // Config
    //-------------------------------------------------------------

    $test: config((
    ), $config);
	
	$config: $test !global;

	@include component(test) {
		
		@include nested-component(test-1) {
			content: "test-1";
			@include modifier(test-2) {
				content: "test-2";
			}
			@include overwrite(test-3) {
				content: "test-3";
				@include nested-modifier(test-4) {
					content: "test-4";
				}
			}
		}
		
		@include sub-component(sub) {
			content: "test-4";
			@include nested-modifier(sub_modifier) {
				content: "test-5";
			}
		}
		
		@include overwrite(overwrite) {
			content: "test-6";
			@include nested-modifier(overwrite_modifier) {
				content: "test-7";
			}
		}
		
		@include modifier(modifier) {
			content: "test-8";
		}
		
	}
	
}

@include test;

//=================================================================
// Homepage Styles
//=================================================================

@include typography((
	colors: (
		primary: #15bbf2
	)
));

@include buttons((
	line-height: 2.4,
	side-spacing: 1em
));

img {
	max-width: 100%;
}

body {
	padding: 0;
	margin: 0;
	background-color: #183C4C;
	background-image: url("bg.jpg");
	font-family: 'Raleway', sans-serif;
	color: white;
	&:before {
		content: "";
		background: rgba(black, 0.6);
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
	}
	@media (min-width: 960px) {
		background-size: cover;		
	}
}

.container {
	width: 960px;
	max-width: 95%;
	margin: auto;
}

.main-container {
	text-align: center;
	position: absolute;
	left: 0;
	right: 0;
	top: 50%;
	transform: translateY(-50%);
}

.logo {
	display: inline-block;
	img {
		display: block;
	}
}

h3 {
	font-weight: lighter;
}

.bgroup {
	padding-top: 0.75em;
}